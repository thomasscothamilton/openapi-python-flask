openapi: 3.0.0
info:
  title: Document Service API
  version: 1.0.0
servers:
- description: Local server
  url: http://localhost:8080
paths:
  /documents:
    get:
      operationId: documents_get
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Document'
                type: array
          description: A list of documents
      summary: Get all documents
      tags:
      - document
      x-openapi-router-controller: server.controllers.default_controller
    post:
      operationId: documents_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Document created
      summary: Create a new document
      tags:
      - document
      x-openapi-router-controller: server.controllers.default_controller
  /documents/{id}:
    delete:
      operationId: documents_id_delete
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Document deleted
        "404":
          description: Document not found
      summary: Delete a document by ID
      tags:
      - document
      x-openapi-router-controller: server.controllers.default_controller
    get:
      operationId: documents_id_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: A single document
        "404":
          description: Document not found
      summary: Get a document by ID
      tags:
      - document
      x-openapi-router-controller: server.controllers.default_controller
    put:
      operationId: documents_id_put
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Document'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: Document updated
        "404":
          description: Document not found
      summary: Update a document by ID
      tags:
      - document
      x-openapi-router-controller: server.controllers.default_controller
components:
  schemas:
    Document:
      example:
        id: id
        title: title
        content: content
      properties:
        id:
          title: id
          type: string
        title:
          title: title
          type: string
        content:
          title: content
          type: string
      required:
      - content
      - title
      title: Document
      type: object
